-- MySQL Script generated by MySQL Workbench
-- Wed Aug 25 11:36:13 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- -----------------------------------------------------
-- Schema pli
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `pli` DEFAULT CHARACTER SET utf8 ;
USE `pli` ;

CREATE USER IF NOT EXISTS "pli"@"localhost" IDENTIFIED BY "karadok";

-- -----------------------------------------------------
-- Table `pli`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pli`.`user` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
  `username` VARCHAR(45) NOT NULL UNIQUE,
  `email` VARCHAR(100) NOT NULL UNIQUE,
  `email_verified_at` TIMESTAMP NULL,
  `password` VARCHAR(300) NOT NULL,
  `firstname` VARCHAR(50) NOT NULL,
  `lastname` VARCHAR(50) NOT NULL,
  `enable` TINYINT NOT NULL DEFAULT 1,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `pli`.`detail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `detail` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
  `age` INT NOT NULL,
  `level` INT NOT NULL DEFAULT 0,
  `local_rank` DOUBLE NULL DEFAULT 0,
  `green_point` DOUBLE NOT NULL DEFAULT 0,
  `user_id` INT UNSIGNED NOT NULL UNIQUE,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_detail_user`
    FOREIGN KEY (`user_id`) REFERENCES `user` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `pli`.`scopes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pli`.`scopes` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(15) NOT NULL,
  `enable` TINYINT NOT NULL DEFAULT 1,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `pli`.`challenge`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pli`.`challenge` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
  `name` VARCHAR(30) NOT NULL UNIQUE,
  `description` TEXT(20000) NOT NULL,
  `reward` INT NOT NULL DEFAULT 100,
  `scope_id` INT UNSIGNED NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  `enable` TINYINT NOT NULL DEFAULT 1,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_challenge_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `pli`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_challenge_scopes`
    FOREIGN KEY (`scope_id`)
    REFERENCES `pli`.`scopes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `pli`.`user_has_challenge`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pli`.`user_has_challenge` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
  `user_id` INT UNSIGNED NOT NULL,
  `challenge_id` INT UNSIGNED NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_user_has_challenge_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `pli`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_challenge_challenge`
    FOREIGN KEY (`challenge_id`)
    REFERENCES `pli`.`challenge` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

GRANT ALL PRIVILEGES ON pli.* TO "pli"@"localhost";
FLUSH PRIVILEGES;
